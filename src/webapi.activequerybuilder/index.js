/**
 * QueryBuilderApi
 * Active Query Builder Web API lets create, analyze and modify SQL queries for different database servers using RESTful HTTP requests to a cloud-based service. It requires SQL execution context (information about database schema and used database server) to be stored under the registered account at https://webapi.activequerybuilder.com/.
 *
 * OpenAPI spec version: 1.1.6
 * Contact: support@activedbsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['webapi.activequerybuilder/ApiClient', 'webapi.activequerybuilder/model/Condition', 'webapi.activequerybuilder/model/ConditionGroup', 'webapi.activequerybuilder/model/HiddenColumn', 'webapi.activequerybuilder/model/Pagination', 'webapi.activequerybuilder/model/QueryColumn', 'webapi.activequerybuilder/model/Sorting', 'webapi.activequerybuilder/model/SqlQuery', 'webapi.activequerybuilder/model/Totals', 'webapi.activequerybuilder/model/Transform', 'webapi.activequerybuilder/model/TransformResult', 'webapi.activequerybuilder/api/ActiveQueryBuilderApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/Condition'), require('./model/ConditionGroup'), require('./model/HiddenColumn'), require('./model/Pagination'), require('./model/QueryColumn'), require('./model/Sorting'), require('./model/SqlQuery'), require('./model/Totals'), require('./model/Transform'), require('./model/TransformResult'), require('./api/ActiveQueryBuilderApi'));
  }
}(function(ApiClient, Condition, ConditionGroup, HiddenColumn, Pagination, QueryColumn, Sorting, SqlQuery, Totals, Transform, TransformResult, ActiveQueryBuilderApi) {
  'use strict';

  /**
   * Active Query Builder Web API lets modify SQL queries for different database servers using RESTful HTTP requests..<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var WebapiActiveQueryBuilder = require('webapi.activequerybuilder/index'); // See note below*.
   * var xxxSvc = new WebapiActiveQueryBuilder.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new WebapiActiveQueryBuilder.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['webapi.activequerybuilder/index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new WebapiActiveQueryBuilder.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new WebapiActiveQueryBuilder.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module webapi.activequerybuilder/index
   * @version 1.1.6
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:webapi.activequerybuilder/ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Condition model constructor.
     * @property {module:webapi.activequerybuilder/model/Condition}
     */
    Condition: Condition,
    /**
     * The ConditionGroup model constructor.
     * @property {module:webapi.activequerybuilder/model/ConditionGroup}
     */
    ConditionGroup: ConditionGroup,
    /**
     * The HiddenColumn model constructor.
     * @property {module:webapi.activequerybuilder/model/HiddenColumn}
     */
    HiddenColumn: HiddenColumn,
    /**
     * The Pagination model constructor.
     * @property {module:webapi.activequerybuilder/model/Pagination}
     */
    Pagination: Pagination,
    /**
     * The QueryColumn model constructor.
     * @property {module:webapi.activequerybuilder/model/QueryColumn}
     */
    QueryColumn: QueryColumn,
    /**
     * The Sorting model constructor.
     * @property {module:webapi.activequerybuilder/model/Sorting}
     */
    Sorting: Sorting,
    /**
     * The SqlQuery model constructor.
     * @property {module:webapi.activequerybuilder/model/SqlQuery}
     */
    SqlQuery: SqlQuery,
    /**
     * The Totals model constructor.
     * @property {module:webapi.activequerybuilder/model/Totals}
     */
    Totals: Totals,
    /**
     * The Transform model constructor.
     * @property {module:webapi.activequerybuilder/model/Transform}
     */
    Transform: Transform,
    /**
     * The TransformResult model constructor.
     * @property {module:webapi.activequerybuilder/model/TransformResult}
     */
    TransformResult: TransformResult,
    /**
     * The ActiveQueryBuilderApi service constructor.
     * @property {module:webapi.activequerybuilder/api/ActiveQueryBuilderApi}
     */
    ActiveQueryBuilderApi: ActiveQueryBuilderApi
  };

  return exports;
}));
